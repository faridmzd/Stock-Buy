// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stock_Buy.API.Data;

#nullable disable

namespace Stock_Buy.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240206081450_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Stock_Buy.API.Domain.AssociatedBundle", b =>
                {
                    b.Property<Guid>("ParentBundleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChildBundleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuantityNeeded")
                        .HasColumnType("int");

                    b.HasKey("ParentBundleId", "ChildBundleId");

                    b.HasIndex("ChildBundleId");

                    b.ToTable("AssociatedBundles", (string)null);
                });

            modelBuilder.Entity("Stock_Buy.API.Domain.AssociatedPart", b =>
                {
                    b.Property<Guid>("BundleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuantityNeeded")
                        .HasColumnType("int");

                    b.HasKey("BundleId", "PartId");

                    b.HasIndex("PartId");

                    b.ToTable("AssociatedParts", (string)null);
                });

            modelBuilder.Entity("Stock_Buy.API.Domain.Bundle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bundles", (string)null);
                });

            modelBuilder.Entity("Stock_Buy.API.Domain.Part", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Parts", (string)null);
                });

            modelBuilder.Entity("Stock_Buy.API.Domain.AssociatedBundle", b =>
                {
                    b.HasOne("Stock_Buy.API.Domain.Bundle", "ChildBundle")
                        .WithMany()
                        .HasForeignKey("ChildBundleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock_Buy.API.Domain.Bundle", "ParentBundle")
                        .WithMany()
                        .HasForeignKey("ParentBundleId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("ChildBundle");

                    b.Navigation("ParentBundle");
                });

            modelBuilder.Entity("Stock_Buy.API.Domain.AssociatedPart", b =>
                {
                    b.HasOne("Stock_Buy.API.Domain.Bundle", "Bundle")
                        .WithMany()
                        .HasForeignKey("BundleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock_Buy.API.Domain.Part", "Part")
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bundle");

                    b.Navigation("Part");
                });
#pragma warning restore 612, 618
        }
    }
}
